/* 주소록*/
CREATE TABLE ADDRESS_BOOK (
	ADDRBOOK_NO NUMBER NOT NULL, /* 주소록번호 */
	ADDRBOOK_NAME VARCHAR2(60), /* 주소록이름 */
	ADDRBOOK_COMNAME VARCHAR2(50), /* 회사명 */
	ADDRBOOK_TEL VARCHAR2(50), /* 전화번호 */
	ADDRBOOK_EMAIL VARCHAR2(100), /* 이메일 */
	EMP_NO NUMBER, /* 사원번호 */
	ADDRBOOK_DEPT VARCHAR2(100), /* 부서 */
	ADDRBOOK_RANK VARCHAR2(100) /* 직급 */
);

ALTER TABLE ADDRESS_BOOK
	ADD
		CONSTRAINT PK_ADDRESS_BOOK
		PRIMARY KEY (
			ADDRBOOK_NO
		);

/* 합의             */
CREATE TABLE AGREEMENT (
	AGREEMENT_NO NUMBER NOT NULL, /* 합의번호 */
	AGREEMENT_STATE NUMBER, /* 합의상태 */
	AGREEMENT_DATE VARCHAR2(50), /* 합의일 */
	AGREEMENT_CONTENT VARCHAR2(2000), /* 합의내용 */
	CONFIRM_DOCUMENT_NO NUMBER, /* 결재문서번호 */
	EMP_NO NUMBER /* 사원번호              */
);

ALTER TABLE AGREEMENT
	ADD
		CONSTRAINT PK_AGREEMENT
		PRIMARY KEY (
			AGREEMENT_NO
		);

/* 연차 */
CREATE TABLE ANNUAL (
	ANNUAL_YEAR NUMBER NOT NULL, /* 근속년수 */
	ANNUAL_COUNT NUMBER /* 연차 갯수 */
);

ALTER TABLE ANNUAL
	ADD
		CONSTRAINT PK_ANNUAL
		PRIMARY KEY (
			ANNUAL_YEAR
		);

/* 기본문서 */
CREATE TABLE BASIC_FORM (
	DOC_NO NUMBER NOT NULL, /* 문서번호 */
	TITLE VARCHAR2(300) NOT NULL, /* 제목 */
	CONTENT VARCHAR2(3000) NOT NULL, /* 내용 */
	DOCUMENT_NO NUMBER NOT NULL, /* 문서양식번호 */
	CONFIRM_DOCUMENT_NO VARCHAR2(30) NOT NULL /* 결재문서번호 */
);

ALTER TABLE BASIC_FORM
	ADD
		CONSTRAINT PK_BASIC_FORM
		PRIMARY KEY (
			DOC_NO
		);

/* 게시글 */
CREATE TABLE BOARD (
	BOARD_NO NUMBER NOT NULL, /* 게시글번호 */
	EMP_NO NUMBER, /* 사원번호 */
	BOARDLIST_NO NUMBER, /* 게시판번호 */
	TITLE VARCHAR2(100), /* 게시글제목 */
	CONTENT VARCHAR2(2000), /* 게시글본문 */
	READCOUNT NUMBER DEFAULT 0, /* 조회수 */
	REGDATE DATE DEFAULT sysdate, /* 게시글등록일 */
	DELFLAG CHAR(1) DEFAULT 'N', /* 삭제여부 */
	GROUPNO NUMBER, /* 그룹번호 */
	STEP NUMBER, /* 게시글단계 */
	SORTNO NUMBER /* 정렬순서 */
);

ALTER TABLE BOARD
	ADD
		CONSTRAINT PK_BOARD
		PRIMARY KEY (
			BOARD_NO
		);

/* 게시판목록 */
CREATE TABLE BOARDLIST (
	BOARDLIST_NO NUMBER NOT NULL, /* 게시판번호 */
	BOARD_NAME VARCHAR2(100), /* 게시판이름 */
	BOARD_TYPE VARCHAR2(100), /* 게시판종류 */
	BOARD_LIKE CHAR(1) DEFAULT 'Y', /* 좋아요 허용여부 */
	COMMENT_FLAG CHAR(1) DEFAULT 'Y', /* 댓글 허용여부 */
	UPLOAD_FLAG CHAR(1) DEFAULT 'N', /* 업로드 허용여부 */
	SECFLAG CHAR(1) DEFAULT 'N'/* 사원공개여부 */
);

ALTER TABLE BOARDLIST
	ADD
		CONSTRAINT PK_BOARDLIST
		PRIMARY KEY (
			BOARDLIST_NO
		);

/* 캘린더 */
CREATE TABLE CALENDAR (
	CALENDAR_NO NUMBER NOT NULL, /* 캘린더번호 */
	TITLE VARCHAR2(200), /* 캘린더제목 */
	BEGINDATE VARCHAR2(30), /* 시작일 */
	ENDDATE VARCHAR2(30), /* 종료일 */
	BEGINTIME VARCHAR2(30), /* 시작시간 */
	ENDTIME VARCHAR2(30), /* 종료시간 */
	ALLDAY_FLAG CHAR(1), /* 종일여부 */
	PLACE VARCHAR2(100), /* 장소 */
	CONTENT VARCHAR2(300), /* 내용 */
	CATEGORY_NO NUMBER, /* 카테고리 색 */
	EMP_NO NUMBER /* 사원번호 */
);

ALTER TABLE CALENDAR
	ADD
		CONSTRAINT PK_CALENDAR
		PRIMARY KEY (
			CALENDAR_NO
		);

/* 사내동호회 */
CREATE TABLE CLUB (
	CLUB_NO NUMBER NOT NULL, /* 동호회번호 */
	TITLE VARCHAR2(100), /* 동호회명 */
	MANAGER VARCHAR2(30), /* 동호회장 */
	INTRODUCE VARCHAR2(500), /* 소개 */
	SECFLAG CHAR(1), /* 공개여부 */
	REGDATE DATE DEFAULT sysdate, /* 등록일자 */
	MEM_LIMITFLAG CHAR(1), /* 멤버제한수여부 */
	MEM_LIMIT NUMBER, /* 제한인원 */
	EMP_NO NUMBER /* 사원번호 */
);

ALTER TABLE CLUB
	ADD
		CONSTRAINT PK_CLUB
		PRIMARY KEY (
			CLUB_NO
		);

/* 동호회게시글 */
CREATE TABLE CLUBBOARD (
	BOARD_NO NUMBER NOT NULL, /* 게시글번호 */
	CLUB_NO NUMBER, /* 동호회번호 */
	EMP_NO NUMBER, /* 사원번호 */
	TITLE VARCHAR2(100), /* 게시글제목 */
	CONTENT VARCHAR2(2000), /* 내용 */
	REGDATE DATE DEFAULT sysdate, /* 등록일 */
	READCOUNT NUMBER DEFAULT 0, /* 조회수 */
	BOARDLIST_NO NUMBER, /* 게시판번호 */
	DELFLAG CHAR(1) DEFAULT 'N' /* 삭제여부 */
);

ALTER TABLE CLUBBOARD
	ADD
		CONSTRAINT PK_CLUBBOARD
		PRIMARY KEY (
			BOARD_NO
		);

/* 사내동호회 댓글 */
CREATE TABLE CLUBBOARD_COMMENT (
	COMMENT_NO NUMBER NOT NULL, /* 댓글번호 */
	CONTENT VARCHAR2(500), /* 댓글본문 */
	REGDATE DATE DEFAULT sysdate, /* 댓글등록일 */
	GROUPNO NUMBER, /* 그룹번호 */
	STEP NUMBER, /* 댓글단계 */
	SORTNO NUMBER, /* 정렬순서 */
	SECFLAG CHAR(1) DEFAULT 'Y', /* 댓글 공개여부 */
	EMP_NO NUMBER, /* 사원번호 */
	BOARD_NO NUMBER, /* 게시글번호 */
	CLUB_NO NUMBER /* 동호회번호 */
);

ALTER TABLE CLUBBOARD_COMMENT
	ADD
		CONSTRAINT PK_CLUBBOARD_COMMENT
		PRIMARY KEY (
			COMMENT_NO
		);

/* 댓글 */
CREATE TABLE COMMENTS (
	COMMENT_NO NUMBER NOT NULL, /* 댓글번호 */
	CONTENT VARCHAR2(500), /* 댓글본문 */
	REGDATE DATE DEFAULT sysdate, /* 댓글등록일 */
	GROUPNO NUMBER DEFAULT 0, /* 그룹번호 */
	STEP NUMBER DEFAULT 0, /* 댓글단계 */
	SORTNO NUMBER DEFAULT 0, /* 정렬순서 */
	SECFLAG CHAR(1) DEFAULT 'Y', /* 댓글공개여부 */
	EMP_NO NUMBER, /* 사원번호 */
	BOARDLIST_NO NUMBER, /* 게시판번호 */
	BOARD_NO NUMBER /* 게시글번호 */
);

ALTER TABLE COMMENTS
	ADD
		CONSTRAINT PK_COMMENT
		PRIMARY KEY (
			COMMENT_NO
		);

/* 근태관리 */
CREATE TABLE COMMUTE (
	COMMUTE_NO NUMBER NOT NULL, /* 근태관리번호 */
	WORK_IN VARCHAR2(30), /* 출근시간 */
	WORK_OUT VARCHAR2(30), /* 퇴근시간 */
	COMMUTE_STATE NUMBER, /* 근태상태 */
	EMP_NO NUMBER /* 사원번호 */
);

ALTER TABLE COMMUTE
	ADD
		CONSTRAINT PK_COMMUTE
		PRIMARY KEY (
			COMMUTE_NO
		);

/* 전자결재 */
CREATE TABLE CONFIRM (
	CONFIRM_DOCUMENT_NO VARCHAR2(50) NOT NULL, /* 결재문서번호 */
	CONFIRM_TITLE VARCHAR2(300) NOT NULL, /* 제목 */
	CONFIRM_CONTENT VARCHAR2(3000) NOT NULL, /* 내용 */
	CREATE_DATE DATE DEFAULT SYSDATE   NOT NULL, /* 상신일 */
	UPDATE_DATE DATE, /* 수정일 */
	REVIEW_DATE DATE, /* 검토일 */
	CONFIRM_DATE DATE, /* 확인일 */
	COMPLETE_DATE DATE, /* 결재일 */
	START_DATE DATE, /* 시행일 */
	END_DATE DATE, /* 종료일 */
	DELFLAG CHAR(1) DEFAULT 'N' , /* 삭제여부 */
	CONFIRM_STATE NUMBER DEFAULT 1  NOT NULL, /* 결재상태번호 */
	EMP_NO NUMBER NOT NULL, /* 사원번호 */
	DOCUMENT_NO NUMBER NOT NULL, /* 문서양식번호 */
	CONFIRM1 NUMBER, /* 결재라인번호1 */
	CONFIRM2 NUMBER, /* 결재라인번호2 */
	CONFIRM3 NUMBER /* 결재라인번호3 */
);

ALTER TABLE CONFIRM
	ADD
		CONSTRAINT PK_CONFIRM
		PRIMARY KEY (
			CONFIRM_DOCUMENT_NO
		);

/* 결재라인 */
CREATE TABLE CONFIRMLINE (
	CONFIRM_LINE_NO NUMBER NOT NULL, /* 결재라인번호 */
	CONFIRM1 NUMBER NOT NULL, /* 검토자(사원번호) */
	CONFIRM2 NUMBER NOT NULL, /* 확인자(사원번호) */
	CONFIRM3 NUMBER NOT NULL, /* 승인자(사원번호) */
	CONSTRUCTOR NUMBER NOT NULL /* 결재라인생성 */
);

ALTER TABLE CONFIRMLINE
	ADD
		CONSTRAINT PK_CONFIRMLINE
		PRIMARY KEY (
			CONFIRM_LINE_NO
		);

/* 결재파일 */
CREATE TABLE CONFIRM_FILE (
	CONFIRM_FILE_NO NUMBER NOT NULL, /* 결재파일번호 */
	FILENAME VARCHAR2(100), /* 업로드파일명 */
	FILESIZE NUMBER, /* 파일사이즈 */
	ORIGINALFILENAME VARCHAR2(100), /* 원본파일명 */
	CONFIRM_DOCUMENT_NO VARCHAR2(30) /* 결재문서번호 */
);

ALTER TABLE CONFIRM_FILE
	ADD
		CONSTRAINT PK_CONFIRM_FILE
		PRIMARY KEY (
			CONFIRM_FILE_NO
		);

/* 부서 */
CREATE TABLE DEPT (
	DEPT_NO NUMBER NOT NULL, /* 부서번호 */
	NAME VARCHAR2(50) NOT NULL, /* 부서명 */
	MANAGER NUMBER, /* 부서책임자 */
	UPPER_DEPT NUMBER, /* 상위부서 */
	DEPT_LEVEL NUMBER /* 부서레벨 */
);

ALTER TABLE DEPT
	ADD
		CONSTRAINT PK_DEPT
		PRIMARY KEY (
			DEPT_NO
		);

/* 부서합의 */
CREATE TABLE DEPTAGREE (
	AGREEMENT_NO NUMBER NOT NULL, /* 부서합의번호 */
	DEPTAGREE_DATE VARCHAR2(50), /* 부서합의일 */
	AGREEMENT_STATE NUMBER DEFAULT 7  NOT NULL, /* 결재상태번호 */
	CONFIRM_DOCUMENT_NO VARCHAR2(50) NOT NULL, /* 결재문서번호 */
	DEPT_NO NUMBER NOT NULL /* 부서번호 */
);

ALTER TABLE DEPTAGREE
	ADD
		CONSTRAINT PK_DEPTAGREE
		PRIMARY KEY (
			AGREEMENT_NO
		);

/* 문서양식 */
CREATE TABLE DOCUMENT_FORM (
	DOCUMENT_NO NUMBER NOT NULL, /* 문서양식번호 */
	FORM_NAME VARCHAR2(100) NOT NULL, /* 양식명 */
	SECURITY_LEVEL VARCHAR2(50), /* 보안수준 */
	DEADLINE VARCHAR2(50), /* 보존기한 */
	FORM_DELFLAG VARCHAR2(20) DEFAULT 'N'  NOT NULL /* 양식 삭제여부 */
);

ALTER TABLE DOCUMENT_FORM
	ADD
		CONSTRAINT PK_DOCUMENT
		PRIMARY KEY (
			DOCUMENT_NO
		);

/* 사원 */
CREATE TABLE EMPLOYEE (
	EMP_NO NUMBER NOT NULL, /* 사원번호 */
	NAME VARCHAR2(30) NOT NULL, /* 사원이름 */
	ENAME VARCHAR2(50) NOT NULL, /* 사원영문이름 */
	JUMIN VARCHAR2(50) NOT NULL, /* 주민번호 */
	EMAIL VARCHAR2(100) NOT NULL, /* 이메일 */
	PWD VARCHAR2(200) NOT NULL, /* 비밀번호 */
	EXTENSION_NO VARCHAR2(30) NOT NULL, /* 내선번호 */
	TEL VARCHAR2(30) NOT NULL, /* 전화번호 */
	ADDRESS VARCHAR2(100) NOT NULL, /* 주소 */
	HIREDATE DATE DEFAULT sysdate NOT NULL, /* 입사일 */
	RETIREDATE DATE, /* 퇴사일 */
	AUTHORITY CHAR(1) DEFAULT 'N', /* 권한 */
	ANNUAL_SALARY NUMBER, /* 연봉 */
	IMAGE VARCHAR2(100), /* 이미지 */
	POSITION_NO NUMBER, /* 직위/직책코드 */
	DEPT_NO NUMBER, /* 부서번호 */
	CLUB_NO NUMBER, /* 동호회번호 */
	ANNUAL_YEAR NUMBER, /* 근속년수  */
	ADDRESSDETAIL VARCHAR2(50), /* 상세주소 */
	MARRIED CHAR(1), /* 결혼여부 */
	MERCHANT_NO NUMBER /* 동호회비 결제번호 */
);

ALTER TABLE EMPLOYEE
	ADD
		CONSTRAINT PK_EMPLOYEE
		PRIMARY KEY (
			EMP_NO
		);

/* 연차사용기록 */
CREATE TABLE LEAVE (
	USENO NUMBER NOT NULL, /* 연차사용번호 */
	USEDATE DATE NOT NULL, /* 연차사용일 */
	TYPE NUMBER, /* 연차유형 */
	REASON VARCHAR2(1000), /* 연차사유 */
	ANNUAL_NO NUMBER, /* 연차번호 */
	REMAIN_LEAVECOUNT NUMBER, /* 남은 연차 */
	EMP_NO NUMBER /* 사원번호 */
);

ALTER TABLE LEAVE
	ADD
		CONSTRAINT PK_LEAVE
		PRIMARY KEY (
			USENO
		);

/* 쪽지(수신) */
CREATE TABLE MESSAGE (
	NO NUMBER NOT NULL, /* 번호 */
	READER NUMBER, /* 수신자 */
	DELFLAG CHAR(1) DEFAULT 'N'  NOT NULL, /* 삭제여부 */
	READ_DATE DATE, /* 읽음일자 */
	MESSAGE_NO NUMBER /* 쪽지번호 */
);

ALTER TABLE MESSAGE
	ADD
		CONSTRAINT PK_MESSAGE
		PRIMARY KEY (
			NO
		);

/* 쪽지(발신) */
CREATE TABLE MESSAGE_CONTENT (
	MESSAGE_NO NUMBER NOT NULL, /* 쪽지번호 */
	MESSAGE_CONTENT VARCHAR2(2000) NOT NULL, /* 쪽지내용 */
	SEND_DATE DATE DEFAULT sysdate  NOT NULL, /* 전송일자 */
	DELFLAG CHAR(1) DEFAULT 'N'  NOT NULL, /* 삭제여부 */
	EMP_NO NUMBER NOT NULL /* 발신자 */
);

ALTER TABLE MESSAGE_CONTENT
	ADD
		CONSTRAINT PK_MESSAGE_CONTENT
		PRIMARY KEY (
			MESSAGE_NO
		);

/* 캘린더 카테고리 */
CREATE TABLE MY_CALENDAR (
	CATEGORY_NO NUMBER NOT NULL, /* 카테고리 번호 */
	NAME VARCHAR2(70), /* 카테고리 이름 */
	COLOR VARCHAR2(50) /* 카테고리 색 */
);

ALTER TABLE MY_CALENDAR
	ADD
		CONSTRAINT PK_MY_CALENDAR
		PRIMARY KEY (
			CATEGORY_NO
		);

/* 자료실 */
CREATE TABLE PDS (
	PDS_NO NUMBER NOT NULL, /* 자료번호 */
	PATH VARCHAR2(500), /* 자료파일경로 */
	REGDATE DATE DEFAULT sysdate, /* 자료등록일 */
	FILENAME VARCHAR2(100), /* 업로드파일명 */
	FILESIZE NUMBER, /* 파일사이즈 */
	ORIGINALFILENAME VARCHAR2(100), /* 원본파일명 */
	FILE_EXTENSION VARCHAR2(50), /* 파일확장자 */
	DOWNLOADCOUNT NUMBER DEFAULT 0, /* 다운로드수 */
	TITLE_IMAGE VARCHAR2(100), /* 대표 이미지 */
	BOARDLIST_NO NUMBER, /* 게시판번호 */
	BOARD_NO NUMBER NOT NULL, /* 게시글번호 */
	CLUB_BOARD_NO NUMBER /* 동호회게시글번호 */
);

ALTER TABLE PDS
	ADD
		CONSTRAINT PK_PDS
		PRIMARY KEY (
			PDS_NO
		);

/* 직위/직책 */
CREATE TABLE POSITION (
	POSITION_NO NUMBER NOT NULL, /* 직위/직책코드 */
	POSITION_NAME VARCHAR2(30) NOT NULL, /* 직위/직책명 */
	POSITION_RANK NUMBER /* 서열 */
);

ALTER TABLE POSITION
	ADD
		CONSTRAINT PK_POSITION
		PRIMARY KEY (
			POSITION_NO
		);

/* 전자문서참조 */
CREATE TABLE REFER (
	REFER_NO NUMBER NOT NULL, /* 첨조번호 */
	CONFIRM_DOCUMENT_NO VARCHAR2(50) NOT NULL, /* 결재문서번호 */
	EMP_NO NUMBER NOT NULL /* 사원번호 */
);

ALTER TABLE REFER
	ADD
		CONSTRAINT PK_REFER
		PRIMARY KEY (
			REFER_NO
		);

/* 자원관리 */
CREATE TABLE REMAN (
	REMAN_NO NUMBER NOT NULL, /* 자원번호 */
	CATEGORY VARCHAR2(50), /* 자원분류 */
	NAME VARCHAR2(50), /* 자원명 */
	DISCRIPTION VARCHAR2(500), /* 자원설명 */
	REGDATE DATE DEFAULT sysdate, /* 자원등록일 */
	STATE NUMBER, /* 자원상태 */
	EMP_NO NUMBER, /* 사원번호 */
	MANAGER VARCHAR2(40) /* 관리자 */
);

ALTER TABLE REMAN
	ADD
		CONSTRAINT PK_REMAN
		PRIMARY KEY (
			REMAN_NO
		);

/* 신고 */
CREATE TABLE REPORT (
	REPORT_NO NUMBER NOT NULL, /* 신고번호 */
	REPORT_DATE DATE DEFAULT SYSDATE, /* 신고일자 */
	REPORT_STATUS NUMBER DEFAULT 0 , /* 처리상태 */
	EMP_NO NUMBER, /* 사원번호 */
	BOARDLIST_NO NUMBER, /* 게시판번호 */
	BOARD_NO NUMBER, /* 게시글번호 */
	COMMENT_NO NUMBER, /* 댓글번호 */
	CLUB_NO NUMBER, /* 동호회번호 */
	CLUBBOARD_NO NUMBER /* 동호회게시글번호 */
);

ALTER TABLE REPORT
	ADD
		CONSTRAINT PK_REPORT
		PRIMARY KEY (
			REPORT_NO
		);

/* 자원예약 */
CREATE TABLE RESERVATION (
	RESERVATION_NO NUMBER NOT NULL, /* 자원예약번호 */
	REMAN_NO NUMBER, /* 자원번호 */
	BOOKDATE VARCHAR2(30), /* 예약날짜 */
	AGREE_FLAG CHAR(1) DEFAULT 'Y', /* 자원승인여부 */
	REGDATE DATE DEFAULT sysdate, /* 자원예약일 */
	EMP_NO NUMBER, /* 사원번호 */
	DEPT_NO NUMBER, /* 부서번호 */
	STARTTIME NUMBER, /* 자원예약시작 시간 */
	ENDTIME NUMBER /* 자원예약종료 시간 */
);

ALTER TABLE RESERVATION
	ADD
		CONSTRAINT PK_RESERVATION
		PRIMARY KEY (
			RESERVATION_NO
		);

/* 사직서 */
CREATE TABLE RESIGNATION (
	RESIGNATION_NO NUMBER NOT NULL, /* 사직서번호 */
	TITLE VARCHAR2(300) NOT NULL, /* 제목 */
	CONTENT VARCHAR2(3000) NOT NULL, /* 내용 */
	RESIGNATION_DATE DATE NOT NULL, /* 퇴직예정일 */
	REASON VARCHAR2(1000), /* 퇴직사유 */
	DOCUMENT_NO NUMBER NOT NULL, /* 문서양식번호 */
	CONFIRM_DOCUMENT_NO VARCHAR2(30) NOT NULL /* 결재문서번호 */
);

ALTER TABLE RESIGNATION
	ADD
		CONSTRAINT PK_RESIGNATION
		PRIMARY KEY (
			RESIGNATION_NO
		);

/* 사내중고거래 */
CREATE TABLE SECONDHAND_TRADE (
	TRADE_NO NUMBER NOT NULL, /* 중고거래번호 */
	EMP_NO NUMBER, /* 사원번호 */
	TITLE VARCHAR2(100), /* 거래글제목 */
	PRODUCT VARCHAR2(100), /* 상품명 */
	PRICE NUMBER, /* 상품가격 */
	DISCRIPTION VARCHAR2(2000), /* 상품설명 */
	REGDATE DATE DEFAULT sysdate, /* 등록일 */
	READCOUNT NUMBER DEFAULT 0, /* 조회수 */
	BOARDLIST_NO NUMBER, /* 게시판번호 */
	LIKECOUNT NUMBER DEFAULT 0, /* 좋아요수 */
	SELFLAG VARCHAR2(4) DEFAULT 'N' /* 판매여부 */
);

ALTER TABLE SECONDHAND_TRADE
	ADD
		CONSTRAINT PK_SECONDHAND_TRADE
		PRIMARY KEY (
			TRADE_NO
		);

/* 중고거래 파일 */
CREATE TABLE SECONDHAND_TRADE_FILE (
	FILE_NO NUMBER NOT NULL, /* 파일번호 */
	IMAGEURL VARCHAR2(300), /* 이미지 */
	TRADE_NO NUMBER /* 중고거래번호 */
);

ALTER TABLE SECONDHAND_TRADE_FILE
	ADD
		CONSTRAINT SYS_C0020589
		PRIMARY KEY (
			FILE_NO
		);

/* 중고거래 좋아요 */
CREATE TABLE SECONDHAND_TRADE_LIKE (
	LIKE_NO NUMBER NOT NULL, /* 좋아요 번호 */
	LIKEFLAG VARCHAR2(5) DEFAULT 'N', /* 좋아요 여부 */
	EMP_NO NUMBER, /* 사원번호 */
	TRADE_NO NUMBER /* 중고거래번호 */
);

ALTER TABLE SECONDHAND_TRADE_LIKE
	ADD
		CONSTRAINT SYS_C0022164
		PRIMARY KEY (
			LIKE_NO
		);

/* 중고거래 댓글 */
CREATE TABLE SHT_COMMENT (
	COMMENT_NO NUMBER NOT NULL, /* 댓글번호 */
	CONTENT VARCHAR2(500), /* 댓글본문 */
	REGDATE DATE, /* 댓글등록일 */
	GROUPNO NUMBER, /* 그룹번호 */
	STEP NUMBER, /* 글의단계 */
	SORTNO NUMBER, /* 정렬순서 */
	SECFLAG CHAR(1) DEFAULT 'Y', /* 댓글공개여부 */
	TRADE_NO NUMBER, /* 중고거래번호 */
	EMP_NO NUMBER /* 사원번호 */
);

ALTER TABLE SHT_COMMENT
	ADD
		CONSTRAINT PK_SHT_COMMENT
		PRIMARY KEY (
			COMMENT_NO
		);

/* 결재상태 */
CREATE TABLE STATE (
	STATE_NO NUMBER NOT NULL, /* 결재상태번호 */
	STATE VARCHAR2(30) NOT NULL /* 결재상태 */
);

ALTER TABLE STATE
	ADD
		CONSTRAINT PK_STATE
		PRIMARY KEY (
			STATE_NO
		);

ALTER TABLE ADDRESS_BOOK
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_ADDRESS_BOOK
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		)
		ON DELETE CASCADE;

ALTER TABLE AGREEMENT
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_AGREEMENT
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		)
		ON DELETE CASCADE;

ALTER TABLE BASIC_FORM
	ADD
		CONSTRAINT FK_DOCUMENT_FORM_TO_BASIC_FORM
		FOREIGN KEY (
			DOCUMENT_NO
		)
		REFERENCES DOCUMENT_FORM (
			DOCUMENT_NO
		);

ALTER TABLE BASIC_FORM
	ADD
		CONSTRAINT FK_CONFIRM_TO_BASIC_FORM
		FOREIGN KEY (
			CONFIRM_DOCUMENT_NO
		)
		REFERENCES CONFIRM (
			CONFIRM_DOCUMENT_NO
		);

ALTER TABLE BOARD
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_BOARD
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		);

ALTER TABLE BOARD
	ADD
		CONSTRAINT FK_BOARDLIST_TO_BOARD
		FOREIGN KEY (
			BOARDLIST_NO
		)
		REFERENCES BOARDLIST (
			BOARDLIST_NO
		)
		ON DELETE CASCADE;

ALTER TABLE CALENDAR
	ADD
		CONSTRAINT FK_MY_CALENDAR_TO_CALENDAR
		FOREIGN KEY (
			CATEGORY_NO
		)
		REFERENCES MY_CALENDAR (
			CATEGORY_NO
		)
		ON DELETE CASCADE;

ALTER TABLE CALENDAR
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_CALENDAR
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		)
		ON DELETE CASCADE;

ALTER TABLE CLUB
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_CLUB
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		)
		ON DELETE CASCADE;

ALTER TABLE CLUBBOARD
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_CLUBBOARD
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		)
		ON DELETE CASCADE;

ALTER TABLE CLUBBOARD
	ADD
		CONSTRAINT FK_CLUB_TO_CLUBBOARD
		FOREIGN KEY (
			CLUB_NO
		)
		REFERENCES CLUB (
			CLUB_NO
		)
		ON DELETE CASCADE;

ALTER TABLE CLUBBOARD
	ADD
		CONSTRAINT FK_BOARDLIST_TO_CLUBBOARD
		FOREIGN KEY (
			BOARDLIST_NO
		)
		REFERENCES BOARDLIST (
			BOARDLIST_NO
		)
		ON DELETE CASCADE;

ALTER TABLE CLUBBOARD_COMMENT
	ADD
		CONSTRAINT FK_CLUB_TO_CLUBBOARD_COMMENT
		FOREIGN KEY (
			CLUB_NO
		)
		REFERENCES CLUB (
			CLUB_NO
		);

ALTER TABLE CLUBBOARD_COMMENT
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_CLUBBOARD_COMMENT
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		)
		ON DELETE CASCADE;

ALTER TABLE CLUBBOARD_COMMENT
	ADD
		CONSTRAINT FK_CLUBBOARD_TO_CLUBBOARD_COMMENT
		FOREIGN KEY (
			BOARD_NO
		)
		REFERENCES CLUBBOARD (
			BOARD_NO
		)
		ON DELETE CASCADE;

ALTER TABLE COMMENTS
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_COMMENT
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		)
		ON DELETE CASCADE;

ALTER TABLE COMMENTS
	ADD
		CONSTRAINT FK_BOARD_TO_COMMENT
		FOREIGN KEY (
			BOARD_NO
		)
		REFERENCES BOARD (
			BOARD_NO
		)
		ON DELETE CASCADE;

ALTER TABLE COMMENTS
	ADD
		CONSTRAINT FK_BOARDLIST_TO_COMMENTS
		FOREIGN KEY (
			BOARDLIST_NO
		)
		REFERENCES BOARDLIST (
			BOARDLIST_NO
		);

ALTER TABLE COMMUTE
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_COMMUTE
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		)
		ON DELETE CASCADE;

ALTER TABLE CONFIRM
	ADD
		CONSTRAINT FK_STATE_TO_CONFIRM
		FOREIGN KEY (
			CONFIRM_STATE
		)
		REFERENCES STATE (
			STATE_NO
		)
		ON DELETE CASCADE;

ALTER TABLE CONFIRM
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_CONFIRM
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		);

ALTER TABLE CONFIRM
	ADD
		CONSTRAINT FK_DOCUMENT_FORM_TO_CONFIRM
		FOREIGN KEY (
			DOCUMENT_NO
		)
		REFERENCES DOCUMENT_FORM (
			DOCUMENT_NO
		);

ALTER TABLE CONFIRMLINE
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_CONFIRMLINE
		FOREIGN KEY (
			CONFIRM1
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		);

ALTER TABLE CONFIRMLINE
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_CONFIRMLINE2
		FOREIGN KEY (
			CONFIRM2
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		);

ALTER TABLE CONFIRMLINE
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_CONFIRMLINE3
		FOREIGN KEY (
			CONFIRM3
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		);

ALTER TABLE CONFIRMLINE
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_CONFIRMLINE4
		FOREIGN KEY (
			CONSTRUCTOR
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		);

ALTER TABLE DEPT
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_DEPT
		FOREIGN KEY (
			MANAGER
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		)
		ON DELETE CASCADE;

ALTER TABLE DEPTAGREE
	ADD
		CONSTRAINT FK_DEPT_TO_DEPTAGREE
		FOREIGN KEY (
			DEPT_NO
		)
		REFERENCES DEPT (
			DEPT_NO
		)
		ON DELETE CASCADE;

ALTER TABLE DEPTAGREE
	ADD
		CONSTRAINT FK_STATE_TO_DEPTAGREE
		FOREIGN KEY (
			AGREEMENT_STATE
		)
		REFERENCES STATE (
			STATE_NO
		);

ALTER TABLE DEPTAGREE
	ADD
		CONSTRAINT FK_CONFIRM_TO_DEPTAGREE
		FOREIGN KEY (
			CONFIRM_DOCUMENT_NO
		)
		REFERENCES CONFIRM (
			CONFIRM_DOCUMENT_NO
		);

ALTER TABLE EMPLOYEE
	ADD
		CONSTRAINT FK_POSITION_TO_EMPLOYEE
		FOREIGN KEY (
			POSITION_NO
		)
		REFERENCES POSITION (
			POSITION_NO
		)
		ON DELETE CASCADE;

ALTER TABLE EMPLOYEE
	ADD
		CONSTRAINT FK_DEPT_TO_EMPLOYEE
		FOREIGN KEY (
			DEPT_NO
		)
		REFERENCES DEPT (
			DEPT_NO
		)
		ON DELETE CASCADE;

ALTER TABLE EMPLOYEE
	ADD
		CONSTRAINT FK_CLUB_TO_EMPLOYEE
		FOREIGN KEY (
			CLUB_NO
		)
		REFERENCES CLUB (
			CLUB_NO
		)
		ON DELETE CASCADE;

ALTER TABLE EMPLOYEE
	ADD
		CONSTRAINT FK_ANNUAL_TO_EMPLOYEE
		FOREIGN KEY (
			ANNUAL_YEAR
		)
		REFERENCES ANNUAL (
			ANNUAL_YEAR
		)
		ON DELETE CASCADE;

ALTER TABLE LEAVE
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_LEAVE
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		)
		ON DELETE CASCADE;

ALTER TABLE MESSAGE
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_MESSAGE
		FOREIGN KEY (
			READER
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		)
		ON DELETE CASCADE;

ALTER TABLE MESSAGE
	ADD
		CONSTRAINT FK_MESSAGE_CONTENT_TO_MESSAGE
		FOREIGN KEY (
			MESSAGE_NO
		)
		REFERENCES MESSAGE_CONTENT (
			MESSAGE_NO
		)
		ON DELETE CASCADE;

ALTER TABLE MESSAGE_CONTENT
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_MESSAGE_CONTENT
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		)
		ON DELETE CASCADE;

ALTER TABLE PDS
	ADD
		CONSTRAINT FK_BOARDLIST_TO_PDS
		FOREIGN KEY (
			BOARDLIST_NO
		)
		REFERENCES BOARDLIST (
			BOARDLIST_NO
		)
		ON DELETE CASCADE;

ALTER TABLE PDS
	ADD
		CONSTRAINT FK_BOARD_TO_PDS
		FOREIGN KEY (
			BOARD_NO
		)
		REFERENCES BOARD (
			BOARD_NO
		)
		ON DELETE CASCADE;

ALTER TABLE PDS
	ADD
		CONSTRAINT FK_CLUB_BOARD_TO_PDS
		FOREIGN KEY (
			CLUB_BOARD_NO
		)
		REFERENCES CLUBBOARD (
			BOARD_NO
		);

ALTER TABLE REFER
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_REFER
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		)
		ON DELETE CASCADE;

ALTER TABLE REMAN
	ADD
		CONSTRAINT FK_REMAN_EMP_NO
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		);

ALTER TABLE REPORT
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_REPORT
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		)
		ON DELETE CASCADE;

ALTER TABLE REPORT
	ADD
		CONSTRAINT FK_BOARDLIST_TO_REPORT
		FOREIGN KEY (
			BOARDLIST_NO
		)
		REFERENCES BOARDLIST (
			BOARDLIST_NO
		)
		ON DELETE CASCADE;

ALTER TABLE REPORT
	ADD
		CONSTRAINT FK_COMMENTS_TO_REPORT
		FOREIGN KEY (
			COMMENT_NO
		)
		REFERENCES COMMENTS (
			COMMENT_NO
		)
		ON DELETE CASCADE;

ALTER TABLE REPORT
	ADD
		CONSTRAINT FK_CLUB_TO_REPORT
		FOREIGN KEY (
			CLUB_NO
		)
		REFERENCES CLUB (
			CLUB_NO
		)
		ON DELETE CASCADE;

ALTER TABLE REPORT
	ADD
		CONSTRAINT FK_CLUBBOARD_TO_REPORT
		FOREIGN KEY (
			CLUBBOARD_NO
		)
		REFERENCES CLUBBOARD (
			BOARD_NO
		);

ALTER TABLE REPORT
	ADD
		CONSTRAINT FK_BOARD_TO_REPORT
		FOREIGN KEY (
			BOARD_NO
		)
		REFERENCES BOARD (
			BOARD_NO
		);

ALTER TABLE RESERVATION
	ADD
		CONSTRAINT FK_REMAN_TO_RESERVATION
		FOREIGN KEY (
			REMAN_NO
		)
		REFERENCES REMAN (
			REMAN_NO
		)
		ON DELETE CASCADE;

ALTER TABLE RESERVATION
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_RESERVATION
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		)
		ON DELETE CASCADE;

ALTER TABLE RESERVATION
	ADD
		CONSTRAINT FK_DEPT_TO_RESERVATION
		FOREIGN KEY (
			DEPT_NO
		)
		REFERENCES DEPT (
			DEPT_NO
		)
		ON DELETE CASCADE;

ALTER TABLE RESIGNATION
	ADD
		CONSTRAINT FK_DOCUMENT_FORM_TO_RESIGNATION
		FOREIGN KEY (
			DOCUMENT_NO
		)
		REFERENCES DOCUMENT_FORM (
			DOCUMENT_NO
		);

ALTER TABLE RESIGNATION
	ADD
		CONSTRAINT FK_CONFIRM_TO_RESIGNATION
		FOREIGN KEY (
			CONFIRM_DOCUMENT_NO
		)
		REFERENCES CONFIRM (
			CONFIRM_DOCUMENT_NO
		);

ALTER TABLE SECONDHAND_TRADE
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_SECONDHAND_TRADE
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		)
		ON DELETE CASCADE;

ALTER TABLE SECONDHAND_TRADE
	ADD
		CONSTRAINT FK_BOARDLIST_TO_SECONDHAND_TRADE
		FOREIGN KEY (
			BOARDLIST_NO
		)
		REFERENCES BOARDLIST (
			BOARDLIST_NO
		)
		ON DELETE CASCADE;

ALTER TABLE SECONDHAND_TRADE_FILE
	ADD
		CONSTRAINT FK_TRADE_NO
		FOREIGN KEY (
			TRADE_NO
		)
		REFERENCES SECONDHAND_TRADE (
			TRADE_NO
		)
		ON DELETE CASCADE;

ALTER TABLE SECONDHAND_TRADE_LIKE
	ADD
		CONSTRAINT FK_EMP_NO
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		);

ALTER TABLE SECONDHAND_TRADE_LIKE
	ADD
		CONSTRAINT FK_TRADE_NO_LIKE
		FOREIGN KEY (
			TRADE_NO
		)
		REFERENCES SECONDHAND_TRADE (
			TRADE_NO
		);

ALTER TABLE SHT_COMMENT
	ADD
		CONSTRAINT FK_SECONDHAND_TRADE_TO_SHT_COMMENT
		FOREIGN KEY (
			TRADE_NO
		)
		REFERENCES SECONDHAND_TRADE (
			TRADE_NO
		)
		ON DELETE CASCADE;

ALTER TABLE SHT_COMMENT
	ADD
		CONSTRAINT FK_EMPLOYEE_TO_SHT_COMMENT
		FOREIGN KEY (
			EMP_NO
		)
		REFERENCES EMPLOYEE (
			EMP_NO
		)
		ON DELETE CASCADE;

--시퀀스

-- 사원 시퀀스
CREATE SEQUENCE EMPLOYEE_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 주소록 시퀀스
CREATE SEQUENCE ADDRESS_BOOK_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 합의 시퀀스
CREATE SEQUENCE AGREEMENT_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 연차 시퀀스
CREATE SEQUENCE ANNUAL_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 기본문서 시퀀스
CREATE SEQUENCE BASIC_FORM_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 게시글 시퀀스
CREATE SEQUENCE BOARD_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 게시판목록 시퀀스
CREATE SEQUENCE BOARDLIST_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 캘린더 시퀀스
CREATE SEQUENCE CALENDAR_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 사내동호회 시퀀스
CREATE SEQUENCE CLUB_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 동호회게시글 시퀀스
CREATE SEQUENCE CLUBBOARD_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 사내동호회 댓글 시퀀스
CREATE SEQUENCE CLUBBOARD_COMMENT_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 댓글 시퀀스
CREATE SEQUENCE COMMENTS_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 근태관리 시퀀스
CREATE SEQUENCE COMMUTE_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 전자결재 시퀀스
CREATE SEQUENCE CONFIRM_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 결재라인 시퀀스
CREATE SEQUENCE CONFIRMLINE_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 결재파일 시퀀스
CREATE SEQUENCE CONFIRM_FILE_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 부서 시퀀스
CREATE SEQUENCE DEPT_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 부서합의 시퀀스
CREATE SEQUENCE DEPTAGREE_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 문서양식 시퀀스
CREATE SEQUENCE DOCUMENT_FORM_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 연차사용기록 시퀀스
CREATE SEQUENCE LEAVE_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 쪽지(수신) 시퀀스
CREATE SEQUENCE MESSAGE_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 쪽지(발신) 시퀀스
CREATE SEQUENCE MESSAGE_CONTENT_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 캘린더 카테고리 시퀀스
CREATE SEQUENCE MY_CALENDAR_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 자료실 시퀀스
CREATE SEQUENCE PDS_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 직위/직책 시퀀스
CREATE SEQUENCE POSITION_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 전자문서참조 시퀀스
CREATE SEQUENCE REFER_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 자원관리 시퀀스
CREATE SEQUENCE REMAN_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 신고 시퀀스
CREATE SEQUENCE REPORT_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 자원예약 시퀀스
CREATE SEQUENCE RESERVATION_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 사직서 시퀀스
CREATE SEQUENCE RESIGNATION_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 사내중고거래 시퀀스
CREATE SEQUENCE SECONDHAND_TRADE_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 중고거래 파일 시퀀스
CREATE SEQUENCE SECONDHAND_TRADE_FILE_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 중고거래 좋아요 시퀀스
CREATE SEQUENCE SECONDHAND_TRADE_LIKE_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 중고거래 댓글 시퀀스
CREATE SEQUENCE SHT_COMMENT_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 결재상태 시퀀스
CREATE SEQUENCE STATE_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;


--VIEW(뷰) 

--------------------------------------------------------
--  DDL for View ADMINCLUBVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "ADMINCLUBVIEW" ("TITLE", "MANAGER", "NAME", "DEPT_NAME", "REGDATE", "CLUB_NO", "IMAGE", "MERCHANT_NO") AS SELECT c.TITLE,c.MANAGER,e.NAME,D.NAME AS DEPT_NAME,c.REGDATE,e.CLUB_NO,e.IMAGE,e.MERCHANT_NO 
FROM employee e JOIN club c
ON e.club_NO = c.club_NO
JOIN DEPT d
ON e.DEPT_NO = d.DEPT_NO;
--------------------------------------------------------
--  DDL for View ALLCOMMUTEVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "ALLCOMMUTEVIEW" ("COMMUTE_NO", "WORK_IN", "WORK_OUT", "COMMUTE_STATE", "EMP_NO", "NAME", "POSITION_NAME", "DEPT_NO", "DEPT_NAME") AS select c."COMMUTE_NO",c."WORK_IN",c."WORK_OUT",c."COMMUTE_STATE",c."EMP_NO", e.name, p.position_name, d.dept_no ,d.name as "DEPT_NAME"
from commute c join employee e
on c.emp_no = e.emp_no
join dept d
on e.dept_no = d.dept_no
join position p 
on e.position_no = p.position_no;
--------------------------------------------------------
--  DDL for View ANONYMOUSREPORTVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "ANONYMOUSREPORTVIEW" ("REPORT_NO", "REPORT_DATE", "REPORT_STATUS", "EMP_NO", "BOARDLIST_NO", "BOARD_NO", "COMMENT_NO", "CLUB_NO", "CLUBBOARD_NO", "NAME", "CONTENT", "COMMENT_CONTENT") AS select r."REPORT_NO",r."REPORT_DATE",r."REPORT_STATUS",r."EMP_NO",r."BOARDLIST_NO",r."BOARD_NO",r."COMMENT_NO",r."CLUB_NO",r."CLUBBOARD_NO",e.name,b.content,c.content as "COMMENT_CONTENT" from 
report r join employee e
on r.emp_no=e.emp_no
join board b
on r.board_no = b.board_no
left join comments c
on r.comment_no=c.comment_no
where r.boardlist_no=5000;
--------------------------------------------------------
--  DDL for View BOARDLISTVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "BOARDLISTVIEW" ("BOARD_NO", "EMP_NO", "BOARDLIST_NO", "TITLE", "CONTENT", "READCOUNT", "REGDATE", "DELFLAG", "BOARD_NAME", "BOARD_TYPE", "BOARD_LIKE", "COMMENT_FLAG", "UPLOAD_FLAG", "SECFLAG") AS select b.board_no, b.emp_no, b.boardList_no, b.title, b.content, b.readcount, b.regdate, b.delflag, 
bl.board_name, bl.board_type, bl.board_like, bl.comment_flag, bl.upload_flag, bl.secflag
from board b left join boardList bl
on b.boardlist_no = bl.boardlist_no
union
select t.trade_no, t.emp_no, t.boardList_no,t.title, t.discription, t.readcount, t.regdate, t.selflag,
bl.board_name, bl.board_type, bl.board_like, bl.comment_flag, bl.upload_flag, bl.secflag
from secondhand_trade t left join boardList bl
on t.boardList_no = bl.boardList_no
union
select c.club_no, c.emp_no, c.boardList_no, c.title, c.content, c.readcount, c.regdate, c.delflag,
bl.board_name, bl.board_type, bl.board_like, bl.comment_flag, bl.upload_flag, bl.secflag
from clubboard c left join boardList bl
on c.boardList_no = bl.boardList_no;
--------------------------------------------------------
--  DDL for View CALENDARVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "CALENDARVIEW" ("CALENDAR_NO", "TITLE", "BEGINDATE", "ENDDATE", "BEGINTIME", "ENDTIME", "ALLDAY_FLAG", "PLACE", "CONTENT", "CATEGORY_NO", "EMP_NO", "EMPNO", "DEPT_NO", "NAME", "IMAGE", "EMPLOYEE_POSITION_NO", "EMPLOYEE_POSITION_NAME") AS SELECT
    cal."CALENDAR_NO",
    cal."TITLE",
    cal."BEGINDATE",
    cal."ENDDATE",
    cal."BEGINTIME",
    cal."ENDTIME",
    cal."ALLDAY_FLAG",
    cal."PLACE",
    cal."CONTENT",
    cal."CATEGORY_NO",
    cal."EMP_NO",
    emp.emp_no AS empNo,
    emp.dept_no,
    emp.name,
    emp.image,
    pos.position_no AS employee_position_no,
    pos.position_name AS employee_position_name
FROM
    calendar cal
JOIN
    employee emp ON cal.emp_no = emp.emp_no
JOIN
    position pos ON emp.position_no = pos.position_no;
--------------------------------------------------------
--  DDL for View CLUBBOARDCOMMVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "CLUBBOARDCOMMVIEW" ("COMMENT_NO", "CONTENT", "REGDATE", "GROUPNO", "STEP", "SORTNO", "SECFLAG", "EMP_NO", "BOARD_NO", "CLUB_NO", "NAME", "POSITION_NO", "IMAGE") AS SELECT c."COMMENT_NO",c."CONTENT",c."REGDATE",c."GROUPNO",c."STEP",c."SORTNO",c."SECFLAG",c."EMP_NO",c."BOARD_NO", c.club_No, e.name,e.position_no,e.image
FROM clubboard_comment c JOIN employee e
ON e.EMP_NO = c.EMP_NO;
--------------------------------------------------------
--  DDL for View CLUBBOARDVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "CLUBBOARDVIEW" ("BOARD_NO", "CLUB_NO", "EMP_NO", "TITLE", "CONTENT", "REGDATE", "READCOUNT", "BOARDLIST_NO", "DELFLAG", "NAME", "IMAGE") AS SELECT c."BOARD_NO",c."CLUB_NO",c."EMP_NO",c."TITLE",c."CONTENT",c."REGDATE",c."READCOUNT",c."BOARDLIST_NO",c."DELFLAG",e.NAME,e.image
FROM employee e JOIN clubboard c
ON e.EMP_NO = c.EMP_NO;
--------------------------------------------------------
--  DDL for View CLUBEMPVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "CLUBEMPVIEW" ("EMP_NO", "NAME", "POSITION_NO", "DEPT_NO", "CLUB_NO") AS SELECT e.EMP_NO, e.NAME, e.POSITION_NO, e.DEPT_NO, c.CLUB_NO
FROM employee e JOIN club c
ON e.CLUB_NO = c.CLUB_NO;
--------------------------------------------------------
--  DDL for View CLUBREPORTVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "CLUBREPORTVIEW" ("BOARD_NO", "CLUB_NO", "EMP_NO", "TITLE", "REGDATE", "READCOUNT", "BOARDLIST_NO", "REPORT_NO", "REPORT_DATE", "REPORT_STATUS", "COMMENT_NO", "NAME", "IMAGE") AS SELECT c.board_No,c.club_No,c.emp_No,c.title,c.regdate,c.readcount,c.boardlist_No, 
    r.report_No,r.report_date,r.report_status,r.comment_No,
    e.name,e.image
FROM clubboard c JOIN report r
ON c.BOARD_NO = r.clubboard_no
JOIN employee e
on c.EMP_NO = e.EMP_NO;
--------------------------------------------------------
--  DDL for View CLUBVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "CLUBVIEW" ("EMP_NO", "CLUB_NO", "TITLE", "MANAGER", "INTRODUCE", "SECFLAG", "REGDATE", "MEM_LIMITFLAG", "MEM_LIMIT") AS SELECT e.EMP_NO, c."CLUB_NO",c."TITLE",c."MANAGER",c."INTRODUCE",c."SECFLAG",c."REGDATE",c."MEM_LIMITFLAG",c."MEM_LIMIT"
FROM employee e JOIN club c
ON e.CLUB_NO = c.CLUB_NO
WHERE e.CLUB_NO=7;
--------------------------------------------------------
--  DDL for View CONFIRMAGREEVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "CONFIRMAGREEVIEW" ("CONFIRM_DOCUMENT_NO", "CONFIRM_TITLE", "CONFIRM_CONTENT", "CREATE_DATE", "UPDATE_DATE", "REVIEW_DATE", "CONFIRM_DATE", "COMPLETE_DATE", "START_DATE", "END_DATE", "DELFLAG", "CONFIRM_STATE", "EMP_NO", "DOCUMENT_NO", "CONFIRM1", "CONFIRM2", "CONFIRM3", "FORM_NAME", "NAME", "IMAGE", "DEPTAGREE_DATE", "AGREEMENT_STATE", "DEPT_NO", "DEPTNAME", "MANAGER", "MANAGERNAME", "STATE") AS select c."CONFIRM_DOCUMENT_NO",c."CONFIRM_TITLE",c."CONFIRM_CONTENT",c."CREATE_DATE",c."UPDATE_DATE",c."REVIEW_DATE",c."CONFIRM_DATE",c."COMPLETE_DATE",c."START_DATE",c."END_DATE",c."DELFLAG",c."CONFIRM_STATE",c."EMP_NO",c."DOCUMENT_NO",c."CONFIRM1",c."CONFIRM2",c."CONFIRM3",f.form_name,e.name,e.image,a.deptagree_date, a.agreement_state,d.dept_no, d.name as deptname, d.manager, e2.name as managername, s.state from
confirm c join deptagree a
on c.confirm_document_no = a.confirm_document_no
join employee e
on e.emp_no = c.emp_no
join document_form f
on c.document_no=f.document_no
join dept d
on a.dept_no=d.dept_no
join employee e2
on e2.emp_no = d.manager
join state s
on c.confirm_state= s.state_no
order by a.agreement_state, c.confirm_document_no desc;
--------------------------------------------------------
--  DDL for View CONFIRMLINEVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "CONFIRMLINEVIEW" ("CONFIRM_LINE_NO", "CONFIRM1", "CONFIRM2", "CONFIRM3", "CONSTRUCTOR", "CONFIRM1NAME", "CONFIRM2NAME", "CONFIRM3NAME") AS select c."CONFIRM_LINE_NO",c."CONFIRM1",c."CONFIRM2",c."CONFIRM3",c."CONSTRUCTOR",e.name as confirm1name, e2.name as confirm2name, e3.name as confirm3name from
confirmline c join employee e
on c.confirm1 = e.emp_no
join employee e2
on c.confirm2 = e2.emp_no
join employee e3
on c.confirm3 = e3.emp_no;
--------------------------------------------------------
--  DDL for View CONFIRMSVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "CONFIRMSVIEW" ("CONFIRM_DOCUMENT_NO", "CONFIRM_TITLE", "CONFIRM_CONTENT", "CREATE_DATE", "UPDATE_DATE", "REVIEW_DATE", "CONFIRM_DATE", "COMPLETE_DATE", "START_DATE", "END_DATE", "DELFLAG", "CONFIRM_STATE", "EMP_NO", "DOCUMENT_NO", "CONFIRM1", "CONFIRM2", "CONFIRM3", "NAME", "IMAGE", "FORM_NAME", "SECURITY_LEVEL", "DEADLINE", "STATE", "CONFIRM1NAME", "CONFIRM2NAME", "CONFIRM3NAME") AS select c."CONFIRM_DOCUMENT_NO",c."CONFIRM_TITLE",c."CONFIRM_CONTENT",c."CREATE_DATE",c."UPDATE_DATE",c."REVIEW_DATE",c."CONFIRM_DATE",c."COMPLETE_DATE",c."START_DATE",c."END_DATE",c."DELFLAG",c."CONFIRM_STATE",c."EMP_NO",c."DOCUMENT_NO",c."CONFIRM1",c."CONFIRM2",c."CONFIRM3",e.name,e.image,d.form_name,d.security_level,d.deadline,s.state,e2.name as confirm1name,e3.name as confirm2name,e4.name as confirm3name from
confirm c join employee e
on c.emp_no = e.emp_no
join employee e2
on c.confirm1 = e2.emp_no
join employee e3
on c.confirm2 = e3.emp_no
join employee e4
on c.confirm3 = e4.emp_no
join document_form d
on c.document_no=d.document_no
join state s
on c.confirm_state=s.state_no;
--------------------------------------------------------
--  DDL for View DEPTBOARDCOMMENTVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "DEPTBOARDCOMMENTVIEW" ("COMMENT_NO", "CONTENT", "REGDATE", "GROUPNO", "STEP", "SORTNO", "SECFLAG", "EMP_NO", "BOARDLIST_NO", "BOARD_NO", "NAME", "EXTENSION_NO", "EMAIL", "IMAGE", "DEPT_NO", "POSITION_NO", "DEPT_NAME", "POSITION_NAME") AS select c."COMMENT_NO",c."CONTENT",c."REGDATE",c."GROUPNO",c."STEP",c."SORTNO",c."SECFLAG",c."EMP_NO",c."BOARDLIST_NO",c."BOARD_NO",e.name, e.extension_no, e.email, e.image, e.dept_no, e.position_no, 
d.name as dept_name, p.position_name
from comments c left join employee e
on c.emp_no = e.emp_no
join dept d
on e.dept_no = d.dept_no
join position p
on e.position_no = p.position_no
where c.boardList_no not in(100,200,1000,2000,3000,4000,5000);
--------------------------------------------------------
--  DDL for View DEPTBOARDLISTVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "DEPTBOARDLISTVIEW" ("BOARD_NO", "EMP_NO", "BOARDLIST_NO", "TITLE", "CONTENT", "READCOUNT", "REGDATE", "DELFLAG", "GROUPNO", "STEP", "SORTNO", "LIKECOUNT", "BOARD_NAME", "BOARD_TYPE", "BOARD_LIKE", "COMMENT_FLAG", "UPLOAD_FLAG", "SECFLAG", "NAME", "EXTENSION_NO", "EMAIL", "IMAGE", "DEPT_NO", "POSITION_NO", "DEPT_NAME", "POSITION_NAME") AS select b."BOARD_NO",b."EMP_NO",b."BOARDLIST_NO",b."TITLE",b."CONTENT",b."READCOUNT",b."REGDATE",b."DELFLAG",b."GROUPNO",b."STEP",b."SORTNO",b."LIKECOUNT",bl.board_name, bl.board_type, bl.board_like, bl.comment_Flag, bl.upload_flag, bl.secflag,
e.name, e.extension_no, e.email, e.image, e.dept_no, e.position_no, d.name as dept_name, p.position_name
from board b left join boardlist bl
on b.boardlist_no = bl.boardlist_no
right join employee e
on b.emp_no = e.emp_no
join dept d
on e.dept_no = d.dept_no
join position p
on e.position_no = p.position_no
where b.boardList_no not in(100,200,1000,2000,3000,4000,5000);
--------------------------------------------------------
--  DDL for View EMPPOSITION
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "EMPPOSITION" ("EMP_NO", "NAME", "ENAME", "JUMIN", "EMAIL", "PWD", "EXTENSION_NO", "TEL", "ADDRESS", "HIREDATE", "RETIREDATE", "AUTHORITY", "ANNUAL_SALARY", "IMAGE", "POSITION_NO", "DEPT_NO", "CLUB_NO", "ANNUAL_YEAR", "ADDRESSDETAIL", "MARRIED", "POSITION_NAME", "POSITION_RANK") AS select e."EMP_NO",e."NAME",e."ENAME",e."JUMIN",e."EMAIL",e."PWD",e."EXTENSION_NO",e."TEL",e."ADDRESS",e."HIREDATE",e."RETIREDATE",e."AUTHORITY",e."ANNUAL_SALARY",e."IMAGE",e."POSITION_NO",e."DEPT_NO",e."CLUB_NO",e."ANNUAL_YEAR",e."ADDRESSDETAIL",e."MARRIED", p.position_name,p.position_rank
from employee e join position p 
on e.position_no = p.position_no
where p.position_rank=8;
--------------------------------------------------------
--  DDL for View LIKEVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "LIKEVIEW" ("TRADE_NO", "WRITER", "TITLE", "PRICE", "DISCRIPTION", "REGDATE", "READCOUNT", "LIKECOUNT", "SELFLAG", "LIKE_NO", "LIKEFLAG", "EMP_NO", "TRADENO") AS select st.trade_no, st.emp_no as writer, st.title, st.price, st.discription, st.regdate,
st.readcount, st.likecount, st.selflag, sl.like_no, sl.likeflag, sl.emp_no, sl.trade_no as tradeNo
from secondhand_trade st left join secondhand_trade_like sl
on st.trade_no = sl.trade_no;
--------------------------------------------------------
--  DDL for View MARKETREPORTVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "MARKETREPORTVIEW" ("REPORT_NO", "REPORT_DATE", "REPORT_EMP_NO", "REPORT_BOARDLIST_NO", "REPORT_BOARD_NO", "REPORT_TRADE_NO", "EMPNUMBER", "TRADE_NO", "EMP_NO", "TITLE", "PRODUCT", "PRICE", "DISCRIPTION", "REGDATE", "READCOUNT", "BOARDLIST_NO", "LIKECOUNT", "SELFLAG", "IMAGE", "NAME") AS SELECT 
    r.report_no AS report_no,
    r.report_date AS report_date,
    r.emp_no AS report_emp_no,
    r.boardlist_no AS report_boardlist_no,
    r.board_no AS report_board_no,
    r.trade_no AS report_trade_no,
    E.EMP_NO AS EMPNUMBER,
    s."TRADE_NO",s."EMP_NO",s."TITLE",
    s."PRODUCT",s."PRICE",s."DISCRIPTION",
    s."REGDATE",s."READCOUNT",s."BOARDLIST_NO",
    s."LIKECOUNT",s."SELFLAG", e.image, e.name
FROM 
    report r
JOIN 
    secondhand_trade s ON r.trade_no = s.trade_no
JOIN
    EMPLOYEE E ON S.EMP_NO = E.EMP_NO;
--------------------------------------------------------
--  DDL for View MESSAGEVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "MESSAGEVIEW" ("MESSAGE_NO", "MESSAGE_CONTENT", "SEND_DATE", "DELFLAG", "EMP_NO", "READER", "READER_DELFLAG", "READ_DATE", "SEND_NAME", "READ_NAME", "SEND_IMAGE", "READ_IMAGE") AS select mc."MESSAGE_NO",mc."MESSAGE_CONTENT",mc."SEND_DATE",mc."DELFLAG",mc."EMP_NO", reader, m.delflag as reader_delflag, m.read_date,e.name as send_name,e2.name as read_name,e.image as send_image,e2.image as read_image from
message_content mc join message m
on mc.message_no = m.message_no
join employee e
on mc.emp_no=e.emp_no
join employee e2
on m.reader=e2.emp_no;
--------------------------------------------------------
--  DDL for View NOTICELISTVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "NOTICELISTVIEW" ("BOARD_NO", "EMP_NO", "BOARDLIST_NO", "TITLE", "CONTENT", "READCOUNT", "REGDATE", "DELFLAG", "GROUPNO", "STEP", "SORTNO", "NAME", "EXTENSION_NO", "EMAIL", "IMAGE", "DEPT_NO", "POSITION_NO", "DEPT_NAME", "POSITION_NAME") AS select b."BOARD_NO",b."EMP_NO",b."BOARDLIST_NO",b."TITLE",b."CONTENT",b."READCOUNT",b."REGDATE",b."DELFLAG",b."GROUPNO",b."STEP",b."SORTNO",e.name, e.extension_no, e.email, e.image, e.dept_no, e.position_no, d.name as dept_name, p.position_name
from board b right join employee e
on b.emp_no = e.emp_no
join dept d
on e.dept_no = d.dept_no
join position p
on e.position_no = p.position_no
where b.boardList_no=2000;
--------------------------------------------------------
--  DDL for View ORGANIZATIONCHARTVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "ORGANIZATIONCHARTVIEW" ("EMP_NO", "NAME", "ENAME", "JUMIN", "EMAIL", "PWD", "EXTENSION_NO", "TEL", "ADDRESS", "HIREDATE", "RETIREDATE", "AUTHORITY", "ANNUAL_SALARY", "IMAGE", "POSITION_NO", "DEPT_NO", "CLUB_NO", "ANNUAL_YEAR", "ADDRESSDETAIL", "MARRIED", "DEPT_NAME", "MANAGER", "UPPER_DEPT", "DEPT_LEVEL", "POSITION_NAME", "POSITION_RANK", "TITLE") AS select e."EMP_NO",e."NAME",e."ENAME",e."JUMIN",e."EMAIL",e."PWD",e."EXTENSION_NO",e."TEL",e."ADDRESS",e."HIREDATE",e."RETIREDATE",e."AUTHORITY",e."ANNUAL_SALARY",e."IMAGE",e."POSITION_NO",e."DEPT_NO",e."CLUB_NO",e."ANNUAL_YEAR",e."ADDRESSDETAIL",e."MARRIED", d.name as dept_name,d.manager, d.upper_dept, d.dept_level, p.position_name, p.position_rank,c.title
from employee e join dept d
on e.dept_no = d.dept_no
join position p
on e.position_no = p.position_no
left join club c
on e.club_no = c.club_no;
--------------------------------------------------------
--  DDL for View PDSCLUB
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "PDSCLUB" ("PDS_NO", "PATH", "FILENAME", "FILESIZE", "FILE_EXTENSION", "BOARDLIST_NO", "PDS_BOARDNO", "TITLE_IMAGE", "ORIGINALFILENAME", "CLUB_NO", "BOARD_NO", "EMP_NO", "TITLE", "CONTENT", "REGDATE", "READCOUNT", "IMAGE") AS select p.pds_no,p.path,p.filename,p.filesize,
    p.file_extension,p.boardlist_no, p.board_no as pds_boardNo,
    p.title_image,p.originalfilename,
    c.club_no,c.board_no,c.emp_no,c.title,c.content,
    c.regdate,c.readcount,e.image
from pds p right join clubboard c
on p.club_board_no = c.board_no
join employee e
on e.emp_no = c.emp_no;
--------------------------------------------------------
--  DDL for View PDSLISTVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "PDSLISTVIEW" ("BOARDLIST_NO", "BOARD_NO", "EMP_NO", "NAME", "TITLE", "CONTENT", "READCOUNT", "REGDATE", "DEPTNAME") AS select b.boardList_no, b.board_No, b.emp_no, e.name, b.title, b.content, b.readcount, b.regdate, d.name as deptName
from board b join  employee e 
on b.emp_No = e.emp_No
join dept d
on e.dept_no = d.dept_no;
--------------------------------------------------------
--  DDL for View PDSVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "PDSVIEW" ("PDS_NO", "PATH", "REGDATE", "FILENAME", "FILESIZE", "ORIGINALFILENAME", "FILE_EXTENSION", "DOWNLOADCOUNT", "TITLE_IMAGE", "BOARDLIST_NO", "BOARD_NO", "BOARD_NAME") AS select p."PDS_NO",p."PATH",p."REGDATE",p."FILENAME",p."FILESIZE",p."ORIGINALFILENAME",p."FILE_EXTENSION",p."DOWNLOADCOUNT",p."TITLE_IMAGE",p."BOARDLIST_NO",p."BOARD_NO",B.BOARD_NAME 
from pds p join boardList b
on p.boardList_no = b.boardList_no;
--------------------------------------------------------
--  DDL for View QNACOMMENTSVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "QNACOMMENTSVIEW" ("COMMENT_NO", "CONTENT", "REGDATE", "GROUPNO", "STEP", "SORTNO", "SECFLAG", "EMP_NO", "BOARDLIST_NO", "BOARD_NO", "NAME", "POSITION_NO", "ENAME", "EMAIL", "IMAGE") AS select c."COMMENT_NO",c."CONTENT",c."REGDATE",c."GROUPNO",c."STEP",c."SORTNO",c."SECFLAG",c."EMP_NO",c."BOARDLIST_NO",c."BOARD_NO", e.name, e.position_no, e.ename, e.email, e.image
from comments c join employee e
on c.emp_no = e.emp_no
where boardList_no=1000;
--------------------------------------------------------
--  DDL for View QNALISTVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "QNALISTVIEW" ("BOARD_NO", "EMP_NO", "BOARDLIST_NO", "TITLE", "CONTENT", "READCOUNT", "REGDATE", "DELFLAG", "GROUPNO", "STEP", "SORTNO", "NAME", "POSITION_NO", "ENAME", "EMAIL", "IMAGE") AS select b."BOARD_NO",b."EMP_NO",b."BOARDLIST_NO",b."TITLE",b."CONTENT",b."READCOUNT",b."REGDATE",b."DELFLAG",b."GROUPNO",b."STEP",b."SORTNO", e.name, e.position_no, e.ename, e.email, e.image
from board b join employee e
on b.emp_no = e.emp_no
where boardList_no=1000;
--------------------------------------------------------
--  DDL for View RESERVATIONVIEW
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "RESERVATIONVIEW" ("RESERVATION_NO", "REMAN_NO", "EMPNAME", "IMAGE", "BOOKDATE", "AGREE_FLAG", "REGDATE", "EMP_NO", "DEPT_NO", "STARTTIME", "ENDTIME", "REMANNO", "CATEGORY", "NAME", "DISCRIPTION", "MANAGER") AS SELECT
    res."RESERVATION_NO",
    res."REMAN_NO",
    emp."NAME" AS EMPNAME,
    emp."IMAGE",
    res."BOOKDATE",
    res."AGREE_FLAG",
    res."REGDATE",
    res."EMP_NO",
    res."DEPT_NO",
    res."STARTTIME",
    res."ENDTIME",
    reman."REMAN_NO" AS remanNo,
    reman."CATEGORY",
    reman."NAME",
    reman."DISCRIPTION",
    reman."MANAGER"
FROM
    "RESERVATION" res
JOIN
    "REMAN" reman ON res."REMAN_NO" = reman."REMAN_NO"
JOIN
    "EMPLOYEE" emp ON res."EMP_NO" = emp."EMP_NO";
--------------------------------------------------------
--  DDL for View SECONDMARKETVIEW 
--------------------------------------------------------

CREATE OR REPLACE NONEDITIONABLE VIEW "SECONDMARKETVIEW" ("EMP_NO", "NAME", "TRADE_NO", "TITLE", "PRODUCT", "PRICE", "DISCRIPTION", "REGDATE", "READCOUNT", "SELFLAG", "LIKECOUNT", "BOARDLIST_NO", "IMAGE") AS select s.emp_no, e.name, s.trade_no, s.title, 
s.product, s.price, s.discription, s.regdate, 
s.readcount,  s.selflag ,s.likecount, s.boardlist_no,
e.image
from secondhand_trade s 
join employee e
on e.emp_no = s.emp_no;